{"version":3,"file":"static/js/672.339e5dab.chunk.js","mappings":"sMACA,GAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,yB,mBCY7K,EATmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAS,IAAMD,EAAEE,OAAOC,UACtCL,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAIT,EAAKO,SAAER,EAAMW,QAGtC,ECJA,EAJgB,SAACX,GACb,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEO,QAAQJ,SAAER,EAAMY,SAC7C,E,uCCsCMC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAXL,SAACd,GACpB,OAAOgB,EAAAA,EAAAA,MAAA,QAAMC,SAAUjB,EAAMkB,aAAaV,SAAA,EACtCL,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,MAAOb,KAAK,iBAAiBc,YAAY,uBAE/GtB,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAEqB,OAAOlB,SAAC,aAGzC,IAIA,EApCgB,SAACR,GAEb,IAAI2B,EAAgB3B,EAAM4B,YAAYC,WAAWC,KAAI,SAAAxB,GAAM,OAAIH,EAAAA,EAAAA,KAAC4B,EAAU,CAACpB,KAAML,EAAOK,KAAsBT,GAAII,EAAOJ,IAAtBI,EAAOJ,GAAqB,IAC3H8B,EAAiBhC,EAAM4B,YAAYK,YAAYH,KAAI,SAAAI,GAAG,OAAI/B,EAAAA,EAAAA,KAACgC,EAAO,CAACvB,QAASsB,EAAItB,QAAsBV,GAAIgC,EAAIhC,IAAhBgC,EAAIhC,GAAkB,IAMxH,OACIc,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAE+B,QAAQ5B,SAAA,EACtBL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEgC,YAAY7B,SACzBmB,KAGLxB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEiC,SAAS9B,UACvBL,EAAAA,EAAAA,KAAA,OAAAK,SAAMwB,OAEV7B,EAAAA,EAAAA,KAACU,EAAmB,CAACI,SAbT,SAACsB,GACjBvC,EAAMwC,YAAYD,EAAME,eAC5B,MAcJ,ECTA,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACC,GACnB,MAAO,CACHhB,YAAagB,EAAMhB,YAE3B,IAEyB,SAACiB,GACtB,MAAO,CACHL,YAAa,SAACC,GACVI,GAASC,EAAAA,EAAAA,GAAmBL,GAChC,EAER,IAIIM,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Sxh01\",\"dialogsItem\":\"Dialogs_dialogsItem__MMlfb\",\"active\":\"Dialogs_active__ZttT5\",\"messages\":\"Dialogs_messages__+0AdF\",\"button\":\"Dialogs_button__utCLE\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Navigate } from \"react-router\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../common/Preloader/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElement = props.dialogsPage.dialogData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n    let messageElement = props.dialogsPage.messageData.map(mes => <Message message={mes.message} key={mes.id} id={mes.id} />);\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogElement}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messageElement}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} validate={[required, maxLengthCreator(100)]} name='newMessageBody' placeholder=\"Enter a message\" />\r\n        </div>\r\n        <div>\r\n            <button className={s.button}>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;"],"names":["props","path","id","_jsx","className","s","dialog","active","children","NavLink","to","name","message","AddMessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","maxLengthCreator","placeholder","button","dialogElement","dialogsPage","dialogData","map","DialogItem","messageElement","messageData","mes","Message","dialogs","dialogsItem","messages","value","sendMessage","newMessageBody","compose","connect","state","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}